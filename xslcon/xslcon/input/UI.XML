<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UI</name>
    </assembly>
    <members>
        <member name="T:ASC.Hrd.HrdClient">
            <summary>
            Abstracts the acquisition of the HRD JSON Feed
            </summary>
        </member>
        <member name="T:ASC.Hrd.HrdRequest">
            <summary>
            Represents a home realm discovery request
            </summary>
        </member>
        <member name="M:ASC.Hrd.HrdRequest.#ctor(System.String,System.String,ASC.Hrd.HrdRequest.Protocol,System.String,System.String,System.String)">
            <summary>
            Constructs HrdRequest
            </summary>
            <param name="issuer">The issuer url</param>
            <param name="realm">Realm of the relying party</param>
            <param name="protocol">Relying party protocol</param>
            <param name="replyTo">Optional reply_to for the relying party</param>
            <param name="context">Optional context for the request</param>
            <param name="callback">Optional callback method. When specified the response will include java script to call this method.</param>
        </member>
        <member name="M:ASC.Hrd.HrdRequest.GetUrlWithQueryString">
            <summary>
            Gets the url with its query string representing this request
            </summary>
            <returns></returns>
        </member>
        <member name="T:ASC.Models.HrdIdentityProvider">
            <summary>
            Identity Provider information in HRD JSON Feed
            </summary>
        </member>
        <member name="M:ASC.Util.NameValueCollectionExtensions.ToQueryString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Greates query string using the name value collection
            </summary>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:UI.ChronozoomSVC.Get(System.String,System.String)">
            <summary>
            Returns data within a specified range of years from a collection or a supercollection.
            </summary>
            <param name="collection">Name of the collection to query.</param>
            <param name="supercollection">Name of the supercollection to query.</param>
        </member>
        <member name="M:UI.ChronozoomSVC.GetTimelines(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns the timelines for the specified collection or supercollection.
            </summary>
            <param name="collection">Name of the collection to query.</param>
            <param name="end">Year at which to end the search, between -20000000000 and 9999.</param>
            <param name="lca">???</param>
            <param name="maxElements">The maximum number of elements to return.</param>
            <param name="minspan">Filters the search results to a particular time scale.</param>
            <param name="start">Year at which to begin the search, -20000000000 and 9999.</param>
            <param name="supercollection">Name of the supercollection to query.</param>
        </member>
        <member name="M:UI.ChronozoomSVC.GetThresholds">
            <summary>
             Returns the time thresholds that have been defined for a ChronoZoom instance.
            </summary>
        </member>
        <member name="M:UI.ChronozoomSVC.Search(System.String,System.String,System.String)">
            <summary>
            Performs a search for a specific term within a collection or a supercollection.
            </summary>
            <param name="collection">Name of the collection to query.</param>
            <param name="searchTerm">The term to search for.</param>
            <param name="supercollection">Name of the supercollection to query.</param>
        </member>
        <member name="M:UI.ChronozoomSVC.GetBibliography(System.String)">
            <summary>
            Returns the bibliography for a given exhibit.
            </summary>
            <param name="exhibitId">The ID of the exhibit.</param>
        </member>
        <member name="M:UI.ChronozoomSVC.GetTours(System.String,System.String)">
            <summary>
            Returns a list of tours for a given collection or supercollection.
            </summary>
            <param name="collection">The name of the collection.</param>
            <param name="supercollection">The name of the supercollection to which the specified collection belongs.</param>
        </member>
        <member name="M:UI.ChronozoomSVC.PutUser(Chronozoom.Entities.User)">
            <summary>
            Updates user information and associated personal collection.
            </summary>
            <param name="user">User information to update.</param>
            <returns>The URL for the new user collection.</returns>
        </member>
        <member name="M:UI.ChronozoomSVC.FriendlyUrlReplacements(System.String)">
            <summary>
            Replace with URL friendly representations. For instance, converts space to '-'.
            </summary>
        </member>
        <member name="M:UI.ChronozoomSVC.PutCollectionName(System.String,System.String,Chronozoom.Entities.Collection)">
            <summary>
            Creates a new collection on behalf of the authenticated user.
            <para>If a collection of the specified name does not exist then a new collection is created. If the collection exists and the authenticated user is the author then the collection is modified.</para>
            <para>If no author is registered then the authenticated user is set as the author.</para>
            
            <para>The title field can't be modified because it is part of the URL (the URL can be indexed).</para>
            <param name="collectionName">The markup for the collection to create, in JSON format.</param>
            <param name="collectionRequest">???</param>
            <param name="superCollectionName">Name of the supercollection beneath which to create the specified collection.</param>
            <returns>A GUID representing the ID for the newly created collection.</returns>
            </summary>
        </member>
        <member name="M:UI.ChronozoomSVC.DeleteCollection(System.String,System.String)">
            <summary>
            Deletes the specified collection.
            </summary>
            <param name="superCollectionName">The name of the supercollection to which the specified collection belongs.</param>
            <param name="collectionName">The name of the collection to delete.</param>
        </member>
        <member name="M:UI.ChronozoomSVC.PutTimeline(System.String,System.String,Chronozoom.Entities.TimelineRaw)">
            <summary>
            Creates or updates the timeline in a given collection. If the collection does not exist, the request will silently fail.
            <para>If a timeline ID is not specified, then a new timeline is added to the collection. For a new timeline, if the parent is not defined it will be set to the root timeline.</para>
            <para>If the specified timeline ID does not exist a "not found" status is returned. If the timeline with the specified ID exists, then the existing timeline is updated.</para>
            <param name="collectionName">Name of the collection to add the timeline.</param>
            <param name="superCollectionName">Name of the supercollection for the specified collection.</param>
            <param name="timelineRequest">Raw timeline data in JSON format.</param>
            <returns>A GUID representing the ID for the timeline that was updated/created.</returns>
            </summary>
        </member>
        <member name="M:UI.ChronozoomSVC.DeleteTimeline(System.String,System.String,Chronozoom.Entities.Timeline)">
            <summary>
            Deletes the timeline with the specified ID.
            </summary>
            <param name="superCollectionName">The name of the supercollection for the specified collection</param>
            <param name="collectionName">The name of the collection containing the timeline to delete.</param>
            <param name="timelineRequest">Raw timeline data in JSON format.</param>
        </member>
        <member name="M:UI.ChronozoomSVC.PutExhibit(System.String,System.String,Chronozoom.Entities.ExhibitRaw)">
             <summary>
             Creates or updates the exhibit and its content items in a given collection. If the collection does not exist, then the request will silently fail.
            
             <para>If an exhibit id is not specified, a new exhibit is added to the collection.
             If the ID for an existing exhibit is specified then the exhibit will be updated.
             If the exhibit id to be updated does not exist a "not found" status is returned.
             If the parent timeline is not specified the exhibit is added to the root timeline.
             Otherwise, the exhibit is added to the specified parent timeline.
             If an invalid parent timeline is specified then the request will fail.</para>
             </summary>
             <param name="collectionName">The name of the collection to add or update an exhibit.</param>
             <param name="exhibitRequest">The name of the supercollection to which the specified collection belongs.</param>
             <param name="superCollectionName">Raw exhibit data in JSON format.</param>        
        </member>
        <member name="M:UI.ChronozoomSVC.DeleteExhibit(System.String,System.String,Chronozoom.Entities.Exhibit)">
            <summary>
            Deletes the specified exhibit from the specified collection.
            </summary>
            <param name="superCollectionName">The name of the supercollection to which the specified collection belongs.</param>
            <param name="collectionName">The name of the collection from which to delete an exhibit.</param>
            <param name="exhibitRequest">Request body.</param>
        </member>
        <member name="M:UI.ChronozoomSVC.PutContentItem(System.String,System.String,Chronozoom.Entities.ContentItemRaw)">
            <summary>
            Creates or updates the content item in a given collection. If the collection does not exist the request will silently fail.
            <para>If a content item ID is not specified then a new content item is added to the parent exhibit.
            If a valid ID is specified and the content item exists, then the existing content item is updated.
            For a new content item, if the parent exhibit is not specified then the request will fail.
            If a parent exhibit is specified then the new content item is added to it. If the parent exhibit ID is invalid then the request will fail.
            If the content item ID does not exist a "not found" status is returned.</para>
            </summary>
            <param name="collectionName">The name of the collection to which a content item will be added.</param>
            <param name="contentItemRequest">The request body.</param>
            <param name="superCollectionName">The name of the supercollection to which the specified collection belongs.</param>
        </member>
        <member name="M:UI.ChronozoomSVC.DeleteContentItem(System.String,System.String,Chronozoom.Entities.ContentItem)">
            <summary>
            Delete the specified content item from the specified collection.
            </summary>
            <param name="superCollectionName">The name of the supercollection to which the specified collection belongs.</param>
            <param name="collectionName">The name of the collection from which a content item will be deleted.</param>
            <param name="contentItemRequest">Request body.</param>
        </member>
        <member name="T:UI.ChronozoomSVC.AuthenticatedOperationDelegate`1">
            <summary>
            Performs an operation udner an authenticated user.
            </summary>
        </member>
        <member name="T:UI.ChronozoomSVC.AuthenticatedOperationVoidDelegate">
            <summary>
            Helper to AuthenticatedOperation to handle void.
            </summary>
        </member>
        <member name="M:Chronozoom.Api.Controllers.AccountController.GetUrlFromContext(System.Web.Mvc.FormCollection)">
            <summary>
            Gets from the form the context
            </summary>
            <param name="form"></param>
            <returns></returns>
        </member>
        <member name="F:UI.SiteMaster.HeadContent">
            <summary>
            HeadContent control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:UI.SiteMaster.MasterPageScriptManager">
            <summary>
            MasterPageScriptManager control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:UI.SiteMaster.HeadLoginView">
            <summary>
            HeadLoginView control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:UI.SiteMaster.HeadHomeLink">
            <summary>
            HeadHomeLink control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:UI.SiteMaster.HeadAboutLink">
            <summary>
            HeadAboutLink control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:UI.SiteMaster.MainContent">
            <summary>
            MainContent control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
    </members>
</doc>
